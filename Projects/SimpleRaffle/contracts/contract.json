{
  "hints": {
    "read_num_entries": {
      "read_only": true
    },
    "read_ticket_price": {
      "read_only": true
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMQpieXRlY2Jsb2NrIDB4NjU2ZTc0NzI2OTY1NzM0MTcyNzI2MTc5NGM2NTZlNjc3NDY4IDB4NzQ2OTYzNmI2NTc0NWY3MDcyNjk2MzY1IDB4MTUxZjdjNzUgMHg2MzZmNmQ2ZDY5NzQ2ZDY1NmU3NDVmNzI2Zjc1NmU2NAp0eG4gTnVtQXBwQXJncwppbnRjXzAgLy8gMAo9PQpibnogbWFpbl9sMTQKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHg5OWMzZGE5OCAvLyAiZmluYWxpemVfcmFmZmxlKCl2b2lkIgo9PQpibnogbWFpbl9sMTMKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHgyNjFjMzFhOSAvLyAiYnV5X3RpY2tldHMocGF5LHVpbnQ2NCl2b2lkIgo9PQpibnogbWFpbl9sMTIKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHgyOWQ2ZDA4OCAvLyAiaW5pdF9yYWZmbGUoYXNzZXQsdWludDY0KXZvaWQiCj09CmJueiBtYWluX2wxMQp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDI0MGQyZjY3IC8vICJjcmVhdGUodWludDY0KXZvaWQiCj09CmJueiBtYWluX2wxMAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDVjNzVkYjU3IC8vICJyZWFkX251bV9lbnRyaWVzKCl1aW50NjQiCj09CmJueiBtYWluX2w5CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4Njg5MzY4MGUgLy8gInJlYWRfdGlja2V0X3ByaWNlKCl1aW50NjQiCj09CmJueiBtYWluX2w4CmVycgptYWluX2w4Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIHJlYWR0aWNrZXRwcmljZV8xMwpzdG9yZSA1CmJ5dGVjXzIgLy8gMHgxNTFmN2M3NQpsb2FkIDUKaXRvYgpjb25jYXQKbG9nCmludGNfMSAvLyAxCnJldHVybgptYWluX2w5Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIHJlYWRudW1lbnRyaWVzXzEyCnN0b3JlIDQKYnl0ZWNfMiAvLyAweDE1MWY3Yzc1CmxvYWQgNAppdG9iCmNvbmNhdApsb2cKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEwOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCj09CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmJ0b2kKY2FsbHN1YiBjcmVhdGVfMTEKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDExOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmludGNfMCAvLyAwCmdldGJ5dGUKc3RvcmUgMgp0eG5hIEFwcGxpY2F0aW9uQXJncyAyCmJ0b2kKc3RvcmUgMwpsb2FkIDIKbG9hZCAzCmNhbGxzdWIgaW5pdHJhZmZsZV8xMAppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTI6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CnR4bmEgQXBwbGljYXRpb25BcmdzIDEKYnRvaQpzdG9yZSAxCnR4biBHcm91cEluZGV4CmludGNfMSAvLyAxCi0Kc3RvcmUgMApsb2FkIDAKZ3R4bnMgVHlwZUVudW0KaW50Y18xIC8vIHBheQo9PQphc3NlcnQKbG9hZCAwCmxvYWQgMQpjYWxsc3ViIGJ1eXRpY2tldHNfOQppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTM6CnR4biBPbkNvbXBsZXRpb24KaW50Y18wIC8vIE5vT3AKPT0KdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KJiYKYXNzZXJ0CmNhbGxzdWIgZmluYWxpemVyYWZmbGVfOAppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMTQ6CnR4biBPbkNvbXBsZXRpb24KaW50Y18xIC8vIE9wdEluCj09CmJueiBtYWluX2wyMAp0eG4gT25Db21wbGV0aW9uCnB1c2hpbnQgMiAvLyBDbG9zZU91dAo9PQpibnogbWFpbl9sMTkKdHhuIE9uQ29tcGxldGlvbgpwdXNoaW50IDQgLy8gVXBkYXRlQXBwbGljYXRpb24KPT0KYm56IG1haW5fbDE4CmVycgptYWluX2wxODoKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KYXNzZXJ0CmNhbGxzdWIgdXBkYXRlXzUKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDE5Ogp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQphc3NlcnQKY2FsbHN1YiBjbG9zZW91dF82CmludGNfMSAvLyAxCnJldHVybgptYWluX2wyMDoKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KYXNzZXJ0CmNhbGxzdWIgb3B0aW5fMwppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGF1dGhfb25seQphdXRob25seV8wOgpwcm90byAxIDEKZnJhbWVfZGlnIC0xCmdsb2JhbCBDcmVhdG9yQWRkcmVzcwo9PQpyZXRzdWIKCi8vIGF1dGhfb3B0ZWRfaW4KYXV0aG9wdGVkaW5fMToKcHJvdG8gMSAxCmZyYW1lX2RpZyAtMQpnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uSUQKYXBwX29wdGVkX2luCnJldHN1YgoKLy8gYXV0aF9vbmx5CmF1dGhvbmx5XzI6CnByb3RvIDEgMQpmcmFtZV9kaWcgLTEKZ2xvYmFsIENyZWF0b3JBZGRyZXNzCj09CnJldHN1YgoKLy8gb3B0X2luCm9wdGluXzM6CnByb3RvIDAgMAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGF1dGhfb25seQphdXRob25seV80Ogpwcm90byAxIDEKZnJhbWVfZGlnIC0xCmdsb2JhbCBDcmVhdG9yQWRkcmVzcwo9PQpyZXRzdWIKCi8vIHVwZGF0ZQp1cGRhdGVfNToKcHJvdG8gMCAwCnR4biBTZW5kZXIKY2FsbHN1YiBhdXRob25seV80Ci8vIHVuYXV0aG9yaXplZAphc3NlcnQKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBjbG9zZV9vdXQKY2xvc2VvdXRfNjoKcHJvdG8gMCAwCmludGNfMSAvLyAxCnJldHVybgoKLy8gYXV0aF9vbmx5CmF1dGhvbmx5Xzc6CnByb3RvIDEgMQpmcmFtZV9kaWcgLTEKZ2xvYmFsIENyZWF0b3JBZGRyZXNzCj09CnJldHN1YgoKLy8gZmluYWxpemVfcmFmZmxlCmZpbmFsaXplcmFmZmxlXzg6CnByb3RvIDAgMAp0eG4gU2VuZGVyCmNhbGxzdWIgYXV0aG9ubHlfMAovLyB1bmF1dGhvcml6ZWQKYXNzZXJ0CmJ5dGVjXzAgLy8gImVudHJpZXNBcnJheUxlbmd0aCIKYXBwX2dsb2JhbF9nZXQKaW50Y18wIC8vIDAKPgphc3NlcnQKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBidXlfdGlja2V0cwpidXl0aWNrZXRzXzk6CnByb3RvIDIgMAp0eG4gU2VuZGVyCmNhbGxzdWIgYXV0aG9wdGVkaW5fMQovLyB1bmF1dGhvcml6ZWQKYXNzZXJ0CmZyYW1lX2RpZyAtMgpndHhucyBBbW91bnQKYnl0ZWNfMSAvLyAidGlja2V0X3ByaWNlIgphcHBfZ2xvYmFsX2dldAo+CmFzc2VydAp0eG4gU2VuZGVyCnB1c2hieXRlcyAweDZlNzU2ZDVmNzQ2OTYzNmI2NTc0NzMgLy8gIm51bV90aWNrZXRzIgpmcmFtZV9kaWcgLTEKYXBwX2xvY2FsX3B1dAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGluaXRfcmFmZmxlCmluaXRyYWZmbGVfMTA6CnByb3RvIDIgMAp0eG4gU2VuZGVyCmNhbGxzdWIgYXV0aG9ubHlfMgovLyB1bmF1dGhvcml6ZWQKYXNzZXJ0CmJ5dGVjXzAgLy8gImVudHJpZXNBcnJheUxlbmd0aCIKYXBwX2dsb2JhbF9nZXQKaW50Y18wIC8vIDAKPT0KYXNzZXJ0CmludGNfMSAvLyAxCnJldHVybgoKLy8gY3JlYXRlCmNyZWF0ZV8xMToKcHJvdG8gMSAwCnB1c2hieXRlcyAweDYyNjU2MTYzNmY2ZTVmNjE3MDcwNWY2OTY0IC8vICJiZWFjb25fYXBwX2lkIgpwdXNoaW50IDExMDA5NjAyNiAvLyAxMTAwOTYwMjYKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMyAvLyAiY29tbWl0bWVudF9yb3VuZCIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKcHVzaGJ5dGVzIDB4NmY3NzZlNjU3MiAvLyAib3duZXIiCmdsb2JhbCBDcmVhdG9yQWRkcmVzcwphcHBfZ2xvYmFsX3B1dApieXRlY18xIC8vICJ0aWNrZXRfcHJpY2UiCnB1c2hpbnQgMTAwMDAwMCAvLyAxMDAwMDAwCmFwcF9nbG9iYWxfcHV0CmJ5dGVjXzAgLy8gImVudHJpZXNBcnJheUxlbmd0aCIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMSAvLyAidGlja2V0X3ByaWNlIgpmcmFtZV9kaWcgLTEKYXBwX2dsb2JhbF9wdXQKZ2xvYmFsIFJvdW5kCnB1c2hpbnQgMyAvLyAzCisKc3RvcmUgNgpieXRlY18zIC8vICJjb21taXRtZW50X3JvdW5kIgpsb2FkIDYKYXBwX2dsb2JhbF9wdXQKcmV0c3ViCgovLyByZWFkX251bV9lbnRyaWVzCnJlYWRudW1lbnRyaWVzXzEyOgpwcm90byAwIDEKaW50Y18wIC8vIDAKdHhuIFNlbmRlcgpjYWxsc3ViIGF1dGhvbmx5XzcKLy8gdW5hdXRob3JpemVkCmFzc2VydApieXRlY18wIC8vICJlbnRyaWVzQXJyYXlMZW5ndGgiCmFwcF9nbG9iYWxfZ2V0CmZyYW1lX2J1cnkgMApyZXRzdWIKCi8vIHJlYWRfdGlja2V0X3ByaWNlCnJlYWR0aWNrZXRwcmljZV8xMzoKcHJvdG8gMCAxCmludGNfMCAvLyAwCmJ5dGVjXzEgLy8gInRpY2tldF9wcmljZSIKYXBwX2dsb2JhbF9nZXQKZnJhbWVfYnVyeSAwCnJldHN1Yg==",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDEKY2FsbHN1YiBjbGVhcnN0YXRlXzAKaW50Y18wIC8vIDEKcmV0dXJuCgovLyBjbGVhcl9zdGF0ZQpjbGVhcnN0YXRlXzA6CnByb3RvIDAgMAppbnRjXzAgLy8gMQpyZXR1cm4="
  },
  "schema": {
    "local": {
      "declared": {
        "is_winner": {
          "type": "uint64",
          "key": "is_winner",
          "descr": "Whether or not you won!!"
        },
        "num_tickets": {
          "type": "uint64",
          "key": "num_tickets",
          "descr": "Number of tickets you hold"
        }
      },
      "reserved": {}
    },
    "global": {
      "declared": {
        "beacon_app_id": {
          "type": "uint64",
          "key": "beacon_app_id",
          "descr": "App ID of the randomness beacon"
        },
        "commitment_round": {
          "type": "uint64",
          "key": "commitment_round",
          "descr": "Round committed for randomness beacon"
        },
        "owner": {
          "type": "bytes",
          "key": "owner",
          "descr": "Creator of the Raffle"
        },
        "ticket_price": {
          "type": "uint64",
          "key": "ticket_price",
          "descr": "Price per ticket"
        },
        "entriesArrayLength": {
          "type": "uint64",
          "key": "entriesArrayLength",
          "descr": "Number of tickets purchsed (aka entries.length)"
        }
      },
      "reserved": {}
    }
  },
  "contract": {
    "name": "Raffle",
    "methods": [
      {
        "name": "finalize_raffle",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "buy_tickets",
        "args": [
          {
            "type": "pay",
            "name": "payment"
          },
          {
            "type": "uint64",
            "name": "numTickets"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "init_raffle",
        "args": [
          {
            "type": "asset",
            "name": "prize"
          },
          {
            "type": "uint64",
            "name": "price"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "create",
        "args": [
          {
            "type": "uint64",
            "name": "price"
          }
        ],
        "returns": {
          "type": "void"
        },
        "desc": "Deploy contract and initialze the app states"
      },
      {
        "name": "read_num_entries",
        "args": [],
        "returns": {
          "type": "uint64"
        },
        "desc": "Read total number of entries. Only callable by Creator."
      },
      {
        "name": "read_ticket_price",
        "args": [],
        "returns": {
          "type": "uint64"
        },
        "desc": "Read price per ticket. Only callable by Creator."
      }
    ],
    "networks": {}
  }
}