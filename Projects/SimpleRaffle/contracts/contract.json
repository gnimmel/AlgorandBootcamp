{
  "hints": {
    "read_num_entries": {
      "read_only": true
    },
    "read_ticket_price": {
      "read_only": true
    },
    "read_winner_indx": {
      "read_only": true
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDEKY2FsbHN1YiBjbGVhcnN0YXRlXzAKaW50Y18wIC8vIDEKcmV0dXJuCgovLyBjbGVhcl9zdGF0ZQpjbGVhcnN0YXRlXzA6CnByb3RvIDAgMAppbnRjXzAgLy8gMQpyZXR1cm4="
  },
  "schema": {
    "local": {
      "declared": {
        "is_winner": {
          "type": "uint64",
          "key": "is_winner",
          "descr": "Whether or not you won!!"
        },
        "num_tickets": {
          "type": "uint64",
          "key": "num_tickets",
          "descr": "Number of tickets you hold"
        }
      },
      "reserved": {}
    },
    "global": {
      "declared": {
        "beacon_app_id": {
          "type": "uint64",
          "key": "beacon_app_id",
          "descr": "App ID of the randomness beacon"
        },
        "commitment_round": {
          "type": "uint64",
          "key": "commitment_round",
          "descr": "Round committed for randomness beacon"
        },
        "owner": {
          "type": "bytes",
          "key": "owner",
          "descr": "Creator of the Raffle"
        },
        "ticket_price": {
          "type": "uint64",
          "key": "ticket_price",
          "descr": "Price per ticket"
        },
        "winner_indx": {
          "type": "uint64",
          "key": "winner_indx",
          "descr": "Index of the randomly selected winner"
        },
        "entriesArrayLength": {
          "type": "uint64",
          "key": "entriesArrayLength",
          "descr": "Number of tickets purchsed (aka entries.length)"
        }
      },
      "reserved": {}
    }
  },
  "contract": {
    "name": "Raffle",
    "methods": [
      {
        "name": "init_raffle",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "buy_tickets",
        "args": [
          {
            "type": "pay",
            "name": "payment"
          },
          {
            "type": "uint64",
            "name": "numTickets"
          }
        ],
        "returns": {
          "type": "void"
        },
        "desc": "Buy tickets for the raffle. Account must be opted in"
      },
      {
        "name": "pick_winner",
        "args": [],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "create",
        "args": [
          {
            "type": "uint64",
            "name": "price"
          }
        ],
        "returns": {
          "type": "void"
        },
        "desc": "Deploy contract and initialze the app states"
      },
      {
        "name": "read_num_entries",
        "args": [],
        "returns": {
          "type": "uint64"
        },
        "desc": "Read total number of entries. Only callable by Creator."
      },
      {
        "name": "read_ticket_price",
        "args": [],
        "returns": {
          "type": "uint64"
        },
        "desc": "Read price per ticket. Only callable by Creator."
      },
      {
        "name": "read_winner_indx",
        "args": [],
        "returns": {
          "type": "uint64"
        },
        "desc": "Read price per ticket. Only callable by Creator."
      }
    ],
    "networks": {}
  }
}