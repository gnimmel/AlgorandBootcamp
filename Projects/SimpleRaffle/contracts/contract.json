{
  "hints": {
    "read_num_entries": {
      "read_only": true
    },
    "read_ticket_price": {
      "read_only": true
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMSAzMgpieXRlY2Jsb2NrIDB4NjU2ZTc0NzI2OTY1NzM0MTcyNzI2MTc5NGM2NTZlNjc3NDY4IDB4NzQ2OTYzNmI2NTc0NWY3MDcyNjk2MzY1IDB4MTUxZjdjNzUgMHg3NDY5NjM2YjY1NzQ0MTY0NjQ3MjY1NzM3MzY1NzMgMHg2MzZmNmQ2ZDY5NzQ2ZDY1NmU3NDVmNzI2Zjc1NmU2NAp0eG4gTnVtQXBwQXJncwppbnRjXzAgLy8gMAo9PQpibnogbWFpbl9sMTQKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHg5OWMzZGE5OCAvLyAiZmluYWxpemVfcmFmZmxlKCl2b2lkIgo9PQpibnogbWFpbl9sMTMKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHgyNjFjMzFhOSAvLyAiYnV5X3RpY2tldHMocGF5LHVpbnQ2NCl2b2lkIgo9PQpibnogbWFpbl9sMTIKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMApwdXNoYnl0ZXMgMHg5MWM5NDU5YyAvLyAiaW5pdF9yYWZmbGUoKXZvaWQiCj09CmJueiBtYWluX2wxMQp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDI0MGQyZjY3IC8vICJjcmVhdGUodWludDY0KXZvaWQiCj09CmJueiBtYWluX2wxMAp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDVjNzVkYjU3IC8vICJyZWFkX251bV9lbnRyaWVzKCl1aW50NjQiCj09CmJueiBtYWluX2w5CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4Njg5MzY4MGUgLy8gInJlYWRfdGlja2V0X3ByaWNlKCl1aW50NjQiCj09CmJueiBtYWluX2w4CmVycgptYWluX2w4Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIHJlYWR0aWNrZXRwcmljZV8xMwpzdG9yZSAzCmJ5dGVjXzIgLy8gMHgxNTFmN2M3NQpsb2FkIDMKaXRvYgpjb25jYXQKbG9nCmludGNfMSAvLyAxCnJldHVybgptYWluX2w5Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIHJlYWRudW1lbnRyaWVzXzEyCnN0b3JlIDIKYnl0ZWNfMiAvLyAweDE1MWY3Yzc1CmxvYWQgMgppdG9iCmNvbmNhdApsb2cKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEwOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCj09CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmJ0b2kKY2FsbHN1YiBjcmVhdGVfMTEKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDExOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIGluaXRyYWZmbGVfMTAKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEyOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydAp0eG5hIEFwcGxpY2F0aW9uQXJncyAxCmJ0b2kKc3RvcmUgMQp0eG4gR3JvdXBJbmRleAppbnRjXzEgLy8gMQotCnN0b3JlIDAKbG9hZCAwCmd0eG5zIFR5cGVFbnVtCmludGNfMSAvLyBwYXkKPT0KYXNzZXJ0CmxvYWQgMApsb2FkIDEKY2FsbHN1YiBidXl0aWNrZXRzXzkKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEzOgp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIGZpbmFsaXplcmFmZmxlXzgKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDE0Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMSAvLyBPcHRJbgo9PQpibnogbWFpbl9sMjAKdHhuIE9uQ29tcGxldGlvbgpwdXNoaW50IDIgLy8gQ2xvc2VPdXQKPT0KYm56IG1haW5fbDE5CnR4biBPbkNvbXBsZXRpb24KcHVzaGludCA0IC8vIFVwZGF0ZUFwcGxpY2F0aW9uCj09CmJueiBtYWluX2wxOAplcnIKbWFpbl9sMTg6CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CmFzc2VydApjYWxsc3ViIHVwZGF0ZV81CmludGNfMSAvLyAxCnJldHVybgptYWluX2wxOToKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KYXNzZXJ0CmNhbGxzdWIgY2xvc2VvdXRfNgppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sMjA6CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CmFzc2VydApjYWxsc3ViIG9wdGluXzMKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBhdXRoX29ubHkKYXV0aG9ubHlfMDoKcHJvdG8gMSAxCmZyYW1lX2RpZyAtMQpnbG9iYWwgQ3JlYXRvckFkZHJlc3MKPT0KcmV0c3ViCgovLyBhdXRoX29wdGVkX2luCmF1dGhvcHRlZGluXzE6CnByb3RvIDEgMQpmcmFtZV9kaWcgLTEKZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbklECmFwcF9vcHRlZF9pbgpyZXRzdWIKCi8vIGF1dGhfb25seQphdXRob25seV8yOgpwcm90byAxIDEKZnJhbWVfZGlnIC0xCmdsb2JhbCBDcmVhdG9yQWRkcmVzcwo9PQpyZXRzdWIKCi8vIG9wdF9pbgpvcHRpbl8zOgpwcm90byAwIDAKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBhdXRoX29ubHkKYXV0aG9ubHlfNDoKcHJvdG8gMSAxCmZyYW1lX2RpZyAtMQpnbG9iYWwgQ3JlYXRvckFkZHJlc3MKPT0KcmV0c3ViCgovLyB1cGRhdGUKdXBkYXRlXzU6CnByb3RvIDAgMAp0eG4gU2VuZGVyCmNhbGxzdWIgYXV0aG9ubHlfNAovLyB1bmF1dGhvcml6ZWQKYXNzZXJ0CmludGNfMSAvLyAxCnJldHVybgoKLy8gY2xvc2Vfb3V0CmNsb3Nlb3V0XzY6CnByb3RvIDAgMAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGF1dGhfb25seQphdXRob25seV83Ogpwcm90byAxIDEKZnJhbWVfZGlnIC0xCmdsb2JhbCBDcmVhdG9yQWRkcmVzcwo9PQpyZXRzdWIKCi8vIGZpbmFsaXplX3JhZmZsZQpmaW5hbGl6ZXJhZmZsZV84Ogpwcm90byAwIDAKdHhuIFNlbmRlcgpjYWxsc3ViIGF1dGhvbmx5XzAKLy8gdW5hdXRob3JpemVkCmFzc2VydApieXRlY18wIC8vICJlbnRyaWVzQXJyYXlMZW5ndGgiCmFwcF9nbG9iYWxfZ2V0CmludGNfMCAvLyAwCj4KYXNzZXJ0CmludGNfMSAvLyAxCnJldHVybgoKLy8gYnV5X3RpY2tldHMKYnV5dGlja2V0c185Ogpwcm90byAyIDAKcHVzaGJ5dGVzIDB4IC8vICIiCnR4biBTZW5kZXIKY2FsbHN1YiBhdXRob3B0ZWRpbl8xCi8vIHVuYXV0aG9yaXplZAphc3NlcnQKZnJhbWVfZGlnIC0yCmd0eG5zIEFtb3VudApmcmFtZV9kaWcgLTEKYnl0ZWNfMSAvLyAidGlja2V0X3ByaWNlIgphcHBfZ2xvYmFsX2dldAoqCj4KYXNzZXJ0CnR4biBTZW5kZXIKcHVzaGJ5dGVzIDB4NmU3NTZkNWY3NDY5NjM2YjY1NzQ3MyAvLyAibnVtX3RpY2tldHMiCmZyYW1lX2RpZyAtMQphcHBfbG9jYWxfcHV0CmludGNfMCAvLyAwCnN0b3JlIDQKYnV5dGlja2V0c185X2wxOgpsb2FkIDQKZnJhbWVfZGlnIC0xCjwKYnogYnV5dGlja2V0c185X2wzCnR4biBTZW5kZXIKZnJhbWVfYnVyeSAwCmZyYW1lX2RpZyAwCmxlbgppbnRjXzIgLy8gMzIKPT0KYXNzZXJ0CmJ5dGVjXzMgLy8gInRpY2tldEFkZHJlc3NlcyIKaW50Y18yIC8vIDMyCmJ5dGVjXzAgLy8gImVudHJpZXNBcnJheUxlbmd0aCIKYXBwX2dsb2JhbF9nZXQKKgpmcmFtZV9kaWcgMApib3hfcmVwbGFjZQpieXRlY18wIC8vICJlbnRyaWVzQXJyYXlMZW5ndGgiCmJ5dGVjXzAgLy8gImVudHJpZXNBcnJheUxlbmd0aCIKYXBwX2dsb2JhbF9nZXQKaW50Y18xIC8vIDEKKwphcHBfZ2xvYmFsX3B1dApsb2FkIDQKaW50Y18xIC8vIDEKKwpzdG9yZSA0CmIgYnV5dGlja2V0c185X2wxCmJ1eXRpY2tldHNfOV9sMzoKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBpbml0X3JhZmZsZQppbml0cmFmZmxlXzEwOgpwcm90byAwIDAKdHhuIFNlbmRlcgpjYWxsc3ViIGF1dGhvbmx5XzIKLy8gdW5hdXRob3JpemVkCmFzc2VydApieXRlY18wIC8vICJlbnRyaWVzQXJyYXlMZW5ndGgiCmFwcF9nbG9iYWxfZ2V0CmludGNfMCAvLyAwCj09CmFzc2VydAppbnRjXzEgLy8gMQpyZXR1cm4KCi8vIGNyZWF0ZQpjcmVhdGVfMTE6CnByb3RvIDEgMApwdXNoYnl0ZXMgMHg2MjY1NjE2MzZmNmU1ZjYxNzA3MDVmNjk2NCAvLyAiYmVhY29uX2FwcF9pZCIKcHVzaGludCAxMTAwOTYwMjYgLy8gMTEwMDk2MDI2CmFwcF9nbG9iYWxfcHV0CmJ5dGVjIDQgLy8gImNvbW1pdG1lbnRfcm91bmQiCmludGNfMCAvLyAwCmFwcF9nbG9iYWxfcHV0CnB1c2hieXRlcyAweDZmNzc2ZTY1NzIgLy8gIm93bmVyIgpnbG9iYWwgQ3JlYXRvckFkZHJlc3MKYXBwX2dsb2JhbF9wdXQKYnl0ZWNfMSAvLyAidGlja2V0X3ByaWNlIgpwdXNoaW50IDEwMDAwMDAgLy8gMTAwMDAwMAphcHBfZ2xvYmFsX3B1dApieXRlY18wIC8vICJlbnRyaWVzQXJyYXlMZW5ndGgiCmludGNfMCAvLyAwCmFwcF9nbG9iYWxfcHV0CmJ5dGVjXzEgLy8gInRpY2tldF9wcmljZSIKZnJhbWVfZGlnIC0xCmFwcF9nbG9iYWxfcHV0CmJ5dGVjXzMgLy8gInRpY2tldEFkZHJlc3NlcyIKcHVzaGludCA2NDAgLy8gNjQwCmJveF9jcmVhdGUKcG9wCmdsb2JhbCBSb3VuZApwdXNoaW50IDMgLy8gMworCnN0b3JlIDUKYnl0ZWMgNCAvLyAiY29tbWl0bWVudF9yb3VuZCIKbG9hZCA1CmFwcF9nbG9iYWxfcHV0CnJldHN1YgoKLy8gcmVhZF9udW1fZW50cmllcwpyZWFkbnVtZW50cmllc18xMjoKcHJvdG8gMCAxCmludGNfMCAvLyAwCnR4biBTZW5kZXIKY2FsbHN1YiBhdXRob25seV83Ci8vIHVuYXV0aG9yaXplZAphc3NlcnQKYnl0ZWNfMCAvLyAiZW50cmllc0FycmF5TGVuZ3RoIgphcHBfZ2xvYmFsX2dldApmcmFtZV9idXJ5IDAKcmV0c3ViCgovLyByZWFkX3RpY2tldF9wcmljZQpyZWFkdGlja2V0cHJpY2VfMTM6CnByb3RvIDAgMQppbnRjXzAgLy8gMApieXRlY18xIC8vICJ0aWNrZXRfcHJpY2UiCmFwcF9nbG9iYWxfZ2V0CmZyYW1lX2J1cnkgMApyZXRzdWI=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDEKY2FsbHN1YiBjbGVhcnN0YXRlXzAKaW50Y18wIC8vIDEKcmV0dXJuCgovLyBjbGVhcl9zdGF0ZQpjbGVhcnN0YXRlXzA6CnByb3RvIDAgMAppbnRjXzAgLy8gMQpyZXR1cm4="
  },
  "schema": {
    "local": {
      "declared": {
        "is_winner": {
          "type": "uint64",
          "key": "is_winner",
          "descr": "Whether or not you won!!"
        },
        "num_tickets": {
          "type": "uint64",
          "key": "num_tickets",
          "descr": "Number of tickets you hold"
        }
      },
      "reserved": {}
    },
    "global": {
      "declared": {
        "beacon_app_id": {
          "type": "uint64",
          "key": "beacon_app_id",
          "descr": "App ID of the randomness beacon"
        },
        "commitment_round": {
          "type": "uint64",
          "key": "commitment_round",
          "descr": "Round committed for randomness beacon"
        },
        "owner": {
          "type": "bytes",
          "key": "owner",
          "descr": "Creator of the Raffle"
        },
        "ticket_price": {
          "type": "uint64",
          "key": "ticket_price",
          "descr": "Price per ticket"
        },
        "entriesArrayLength": {
          "type": "uint64",
          "key": "entriesArrayLength",
          "descr": "Number of tickets purchsed (aka entries.length)"
        }
      },
      "reserved": {}
    }
  },
  "contract": {
    "name": "Raffle",
    "methods": [
      {
        "name": "finalize_raffle",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "buy_tickets",
        "args": [
          {
            "type": "pay",
            "name": "payment"
          },
          {
            "type": "uint64",
            "name": "numTickets"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "init_raffle",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "create",
        "args": [
          {
            "type": "uint64",
            "name": "price"
          }
        ],
        "returns": {
          "type": "void"
        },
        "desc": "Deploy contract and initialze the app states"
      },
      {
        "name": "read_num_entries",
        "args": [],
        "returns": {
          "type": "uint64"
        },
        "desc": "Read total number of entries. Only callable by Creator."
      },
      {
        "name": "read_ticket_price",
        "args": [],
        "returns": {
          "type": "uint64"
        },
        "desc": "Read price per ticket. Only callable by Creator."
      }
    ],
    "networks": {}
  }
}